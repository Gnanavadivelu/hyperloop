#pragma once
<% var typeToUse = fullInstanceName + (object.is_enum ? '*' : '^'); %>
<%- renderTemplate('templates/doc.ejs') %>
#include "hyperloop.h"
<% state.handlerBindings[name] && state.handlerBindings[name].forEach(function(binding) {
	%>#include "Generated/<%- binding.className %>.h"<%
});
%>
<%- renderTemplate('templates/includes_and_usings.ejs', { _includes: _includes, _usings: _usings, mangleTypeName: mangleTypeName }) %>

JSClassRef CreateClassFor<%-name%>();
JSClassRef CreateClassFor<%-name%>Constructor();
JSObjectRef MakeObjectFor<%-name%>(JSContextRef ctx, <%- typeToUse %> instance);

JSValueRef Hyperloop<%-name%>ToJSValueRef(JSContextRef ctx, <%- typeToUse %> instance);
<%- typeToUse %>  HyperloopJSValueRefTo<%-name%>(JSContextRef ctx, JSValueRef value, JSValueRef *exception, bool *cleanup);
JSObjectRef MakeObjectFor<%-name%>Constructor(JSContextRef ctx);
