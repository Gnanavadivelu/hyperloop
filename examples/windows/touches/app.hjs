var transformOrigin = Point(.5, .5),
	window = Window.Current,
	canvas = new Canvas(),
	colors = {
		red: new SolidColorBrush(Colors.Red),
		green: new SolidColorBrush(Colors.Green),
		blue: new SolidColorBrush(Colors.Blue),
		yellow: new SolidColorBrush(Colors.Yellow)
	};

canvas.Background = colors.blue;
canvas.Width = window.Bounds.Width;
canvas.Height = window.Bounds.Height;

var seed = 1;
function random() {
	var x = Math.sin(seed++) * 10000;
	return x - Math.floor(x);
}

for (var i = 0; i < 3; i++) {
	(function() {
		var view = new Canvas(),
			angle = { R: 0 },
			translation = { X: 0, Y: 0 };

		view.Width = view.Height = (random() * 200 + 100) | 0;
		Canvas.SetTop(view, (random() * (canvas.Height - view.Height)) | 0);
		Canvas.SetLeft(view, (random() * (canvas.Width - view.Width)) | 0);

		view.ManipulationMode = ManipulationModes.All;
		view.add_ManipulationDelta(function(object, e) {
			var view = @cast('Canvas^', e.OriginalSource),
				transformGroup = new TransformGroup();

			// Rotate.
			view.RenderTransformOrigin = transformOrigin;
			var rotateTransform = new RotateTransform();
			rotateTransform.Angle = (angle.R += e.Delta.Rotation);
			transformGroup.Children.Append(rotateTransform);

			// Translate.
			var translateTransform = new TranslateTransform();
			translateTransform.X = (translation.X += e.Delta.Translation.X);
			translateTransform.Y = (translation.Y += e.Delta.Translation.Y);
			transformGroup.Children.Append(translateTransform);

			// Scale.
			view.Width += e.Delta.Expansion;
			view.Height += e.Delta.Expansion;

			// Apply.
			view.RenderTransform = transformGroup;
		});
		view.Background = colors[['red', 'yellow', 'green'][i % 3]];
		canvas.Children.Append(view);
	})();
}

window.Content = canvas;
window.Activate();