/*
 Create a basic UI for showing the results of our code below.
 */
var win = Window.Current,
	text = new TextBlock();
text.Text = '';
text.TextAlignment = TextAlignment.Center;
text.VerticalAlignment = VerticalAlignment.Center;
text.HorizontalAlignment = HorizontalAlignment.Center;
text.FontSize = 32;
win.Content = text;
win.Activate();

/**
 * Log to the screen and to the console.
 */
function log() {
	var args = Array.prototype.slice.call(arguments, 0);
	text.Text += args.reduce(function(previous, current) {
		return previous + ' ' + current.toString();
	}) + '\n';
	console.log.apply(console, arguments);
}

/*
 Demonstrate @memory.
 */
// create a String from JS string
var hello = 'Hello';

// create a direct memory buffer
var buffer = @memory();

// write a string into the buffer
buffer.putString('world');

// create a String from the buffer
var message = '' + buffer;


// log with both String
log(hello, message);

// log with buffer as argument
log(hello, buffer);

// log with buffer.toCharArray() as argument
log(hello, buffer.toCharArray());

// log with primitive
log(hello, 1);

// log with boolean
log(hello, true);

// log with object
log(hello, { a: 1 });

// log with string
log(hello, 'world');
