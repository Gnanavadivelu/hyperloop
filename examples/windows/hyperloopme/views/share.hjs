var Tray = require('../controls/tray.hjs');
/*
 Public API.
 */
exports.show = show;

/*
 Utility class.
 */
@class('ShareShareTapHandler', null, [], [
	{
		name: 'PointerPressed',
		forHandler: 'TappedEventHandler',
		returnType: 'void',
		arguments: [
			{ name: 'sender', type: 'Object^' },
			{ name: 'e', type: 'TappedRoutedEventArgs^' }
		],
		action: function () {
			DataTransferManager.ShowShareUI();
		}
	}
]);
@class('ShareContinueTapHandler', null, [], [
	{
		name: 'PointerPressed',
		forHandler: 'TappedEventHandler',
		returnType: 'void',
		arguments: [
			{ name: 'sender', type: 'Object^' },
			{ name: 'e', type: 'TappedRoutedEventArgs^' }
		],
		action: require('./launch.hjs').show
	}
]);

/*
 Implementation.
 */
function show(bitmap) {
	var window = Window.Current,
		background = new ImageBrush(),
		container = new Canvas();
	
	background.ImageSource = bitmap;
	container.Background = background;

	var tray = global.lastTray = Tray([
		{
			text: 'Share',
			handler: new TappedEventHandler(new ShareShareTapHandler(), 'PointerPressed')
		},
		{
			text: 'Continue',
			handler: new TappedEventHandler(new ShareContinueTapHandler(), 'PointerPressed')
		}
	]);
	container.Children.Append(tray);

	window.Content = container;
}